-- WHERE절

SELECT * FROM EMPLOYEES;

SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT * FROM EMPLOYEES WHERE SALARY >= 15000;
SELECT * FROM EMPLOYEES WHERE SALARY <= 10000;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> 50; --같지 않음
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven'; -- 데이터는 대소문자 구분한다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '04/01/30'; -- 날짜도 문자열로 찾으면 된다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE <= '04/01/30';

--BETWEEN A AND B (이상 ~이하)
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 15000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/01/01' AND '03/12/31';

-- IN 연산자
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN(50, 60,70);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN('IT_PROG', 'AD_VP');

-- LIKE 연산자
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%'; -- 03으로 시작하는 단어면 무엇이든 가능
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%01'; -- 01로 끝나는 단어면 무엇이든 가능
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%05%'; -- 05가 처음이든 끝이든 중간이든 들어만 있으면 가능
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_ar%'; --언더바는 자리수를 의미한다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%';

-- IS NULL, IS NOT NULL
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT = NULL; -- X
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL; --NULL 값을 찾을 때는 IS NULL을 쓰기!
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL; --NULL 값을 제외시킬 때는 IS NOT NULL을 쓰기!

-- AND, OR - AND가 OR보다 연산 순위가 빠르다.
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 5000; --둘 중 하나만 만족해도 출력
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 5000; --둘 다 만족하는 경우만
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR' AND SALARY >=5000; --AND먼저 그다음 OR
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >=5000; -- 소괄호 부터 우선순위

-- NOT 부정의 의미
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (50,60,70);
SELECT * FROM EMPLOYEES WHERE JOB_ID NOT LIKE '%IT%';

----------------------------------------------------------------------------------------------

--ORDER BY 구문
SELECT * FROM EMPLOYEES ORDER BY SALARY; --ASC가 DEFAULT
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC; -- 급여 내림차순 정렬
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID, SALARY DESC; --먼저 부서 아이디로 정렬한 뒤에 동순위에 대해서 급여의 내림차순으로 정렬

SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES ORDER BY 연봉 DESC; --엘리어스를 정렬에서 사용할 수 있다.
SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES WHERE 연봉 >= 10000; -- WHERE에서 사용 불가

--부서번호가 50번인 사람들 중에서 이름 기준으로 ABC순 정리
SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID = 50 ORDER BY FIRST_NAME;